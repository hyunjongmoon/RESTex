{
    "swagger": "2.0",
    "info": {
        "description": "User Management service query side API is a microserice that used for user management on light-portal  built on top of light-4j framework.",
        "version": "1.0.0",
        "title": "User Management service query API",
        "contact": {
            "email": "stevehu@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "user.networknt.com",
    "basePath": "/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/user": {
            "get": {
                "description": "Return an array of user",
                "operationId": "getAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "user_auth": [
                            "user.a"
                        ]
                    }
                ],
                "x-accepts": "application/json",
                "x-contentType": "application/json"
            }

        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Find User by ID",
                "description": "Returns a single User",
                "operationId": "getUserById",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "user_auth": [
                            "user.r"
                        ]
                    }
                ]
            }
      },
        "/user/email": {
            "get": {
                "description": "Return a user by email",
                "operationId": "getByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "unqiue email of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "security": [
                    {
                        "user_auth": [
                            "user.r"
                        ]
                    }
                ]
            }
        },
        "/user/name": {
            "get": {
                "description": "Return a user by user name",
                "operationId": "getByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "login name of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "security": [
                    {
                        "user_auth": [
                            "user.r"
                        ]
                    }
                ],
                "x-accepts": "application/json",
                "x-contentType": "application/json"
            }
        },
        "/user/login": {
            "put": {
                "description": "User login process",
                "operationId": "loginUser",
                "parameters": [
                    {
                       "in": "body",
                        "name": "body",
                        "description": "user login form object for login",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginForm"
                        }
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "security": [
                    {
                        "user_auth": [
                            "user.r", "user.w"
                        ]
                    }
                ],
                "x-accepts": "application/json",
                "x-contentType": "application/json"
            }
        }
    },
    "securityDefinitions": {
        "user_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://localhost:8080/oauth2/code",
            "flow": "implicit",
            "scopes": {
                "user.r": "read user",
                "user.w": "write user",
                "user.a": "admin user"
            }
        }

    },
    "definitions": {
        "ContactData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "email address of the user"
                },
                "firstName": {
                    "type": "string",
                    "description": "firstName of the user"
                },
                "lastName": {
                    "type": "string",
                    "description": "firstName of the user"
                },
                "gender": {
                    "type": "string",
                    "description": "user gender type",
                    "enum": [
                        "FEMALE",
                        "MALE",
                        "UNKNOWN"
                    ]
                },
                "birthday": {
                    "type": "string",
                    "format": "date-time",
                    "description": "birthday of the user"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "a UUID generated"
                },
                "host": {
                    "type": "string",
                    "description": "user host indicator the organization for user"
                },
                "screenName": {
                    "type": "string",
                    "description": "screenName of user"
                },
                "timezone": {
                    "type": "string",
                    "description": "timezone name of user"
                },
                "locale": {
                    "type": "string",
                    "description": "locale display name of user"
                },
                "password": {
                    "type": "string",
                    "description": "raw password of user"
                },
                "contactData": {
                    "$ref": "#/definitions/ContactData"
                }
            }
        },
        "LoginForm": {
            "type": "object",
            "properties": {
                "nameOrEmail": {
                    "type": "string",
                    "description": "user screenName or email for login"
                },
                "password": {
                    "type": "string",
                    "description": "user password for user login"
                },
                "token": {
                    "type": "string",
                    "description": "token with the user login"
                }
            }
        }        

    }
}