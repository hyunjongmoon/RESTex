{
  "swagger" : "2.0",
  "info" : {
    "description" : "User Management service API is a microserice that used for user management on light-portal  built on top of light-4j framework.",
    "version" : "1.0.0",
    "title" : "User Management service API",
    "contact" : {
      "email" : "stevehu@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "user.networknt.com",
  "basePath" : "/v1",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/users" : {
      "get" : {
        "description" : "Return an array of user",
        "operationId" : "getAll",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        },
        "security" : [ {
          "user_auth" : [ "user.r"]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/users/{id}" : {
      "get" : {
        "description" : "Return a user by Id",
        "operationId" : "getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "type" : "long"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        },
        "security" : [ {
          "user_auth" : [ "user.r" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/session/{id}" : {
      "get" : {
        "description" : "Return a session by Id",
        "operationId" : "getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of session",
          "required" : true,
          "type" : "long"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Session"
            }
          }
        },
        "security" : [ {
          "session_auth" : [ "session.r" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/users" : {
      "post": {
        "description": "Return a user object with Id",
        "operationId": "add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "user_auth": [
              "user.r", "user.w"
            ]
          }
        ],
        "x-accepts": "application/json",
        "x-contentType": "application/json"
      }
    },
    "/session" : {
      "post": {
        "description": "Return a session object with Id",
        "operationId": "add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created session object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        },
        "security": [
          {
            "session_auth": [
              "session.r", "session.w"
            ]
          }
        ],
        "x-accepts": "application/json",
        "x-contentType": "application/json"
      }
    },
    "/users" : {
        "put" : {
          "description" : "Return the updated user object",
          "operationId" : "update",
          "parameters" : [
            {
              "name": "id",
              "in": "body",
              "description": "The user id for update",
              "required": true,
              "type": "long"
            }
          ],
          "responses" : {
            "200" : {
              "description" : "Successful response",
              "schema" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "security" : [ {
            "user_auth" : [ "user.r", "user.w" ]
          } ],
          "x-accepts" : "application/json",
          "x-contentType" : "application/json"
        }
      },
    "/users" : {
      "put" : {
        "description" : "Return the updated user object",
        "operationId" : "update",
        "parameters" : [
          {
            "name": "id",
            "in": "body",
            "description": "The user id for update",
            "required": true,
            "type": "long"
          },
          {
            "name": "token",
            "in": "body",
            "description": "The user token for update",
            "required": true,
            "type": "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        },
        "security" : [ {
          "user_auth" : [ "user.r",  "user.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/user/{id}" : {
      "delete" : {
        "description" : "Delete a user by Id",
        "operationId" : "deleteById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "type" : "long"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "user_auth" : [ "user.r",  "user.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/delete/{id}" : {
      "delete" : {
        "description" : "Delete a session by Id",
        "operationId" : "deleteById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of session",
          "required" : true,
          "type" : "long"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Session not found"
          }
        },
        "security" : [ {
          "session_auth" : [ "session.r",  "session.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    }
  },
  "securityDefinitions" : {
    "user_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://localhost:8080/oauth2/code",
      "flow" : "implicit",
      "scopes" : {
        "user.r" : "read user",
        "user.w" : "write user"
      }
    },
    "session_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://localhost:8080/oauth2/code",
      "flow" : "implicit",
      "scopes" : {
        "session.r" : "read session",
        "session.w" : "write session"
      }
    }
  },
  "definitions" : {
    "ContactData" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string",
          "description" : "email address of the user"
        },
        "firstName" : {
          "type" : "string",
          "description" : "firstName of the user"
        },
        "lastName" : {
          "type" : "string",
          "description" : "firstName of the user"
        },
        "birthday" : {
          "type" : "date",
          "description" : "birthday of the user"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "long",
          "description" : "a UUID generated"
        },
        "screenName" : {
          "type" : "string",
          "description" : "screenName of user"
        },
        "timezone" : {
          "type" : "string",
          "description" : "timezone name of user"
        },
        "locale" : {
          "type" : "string",
          "description" : "locale display name of user"
        },
        "password" : {
          "type" : "string",
          "description" : "raw password of user"
        },
        "contactData" : {
          "$ref" : "#/definitions/ContactData"
        }

      }
    },
    "Session" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "long",
          "description" : "a UUID generated"
        },
        "userId" : {
          "type" : "long",
          "description" : "userId with the session"
        },
        "token" : {
          "type" : "string",
          "description" : "token with the session"
        }
      }
    }
  }
}